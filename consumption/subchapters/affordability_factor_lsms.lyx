#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\columnsep 1.2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section

\size normal
Determining Status ranking from the LSMS data in Tanzania
\end_layout

\begin_layout Standard
The LSMS survey records neither the price nor the quantity consumed for
 any non-food quantities.
 Instead of differences in prices (which are unavailable), we test whether
 differences in per-head consumption in the population within a region could
 represent the variants of different prices which can be used to calculated
 the affordability factor (i.e.
 the quantity 
\begin_inset Formula $p_{i}-max(p_{k})$
\end_inset

).
\end_layout

\begin_layout Standard
This exercise is neither trivial and not fully reliable at this point -
 but an effort to detect the variants of the same item or group of items
 with different prices in the market.
 In the absence of price data, we hope to use some knowledge of the supply
 side to improve our interpretation of price from average cost data.
 We begin with identifying clusters in the per head consumption cost after
 accounting for control variables related to usage of the item e.g.
 more per-head electricity costs should be scaled with number of appliances
 the household may have (which is available in data).
 In absence of prices, this ad-hoc test needs to be performed on a case-by-case
 basis.
 
\end_layout

\begin_layout Standard
The significance of control variables denoting the usage of related assets
 owned by the consumer and the lack of any clustering (in average consumption
 scaled by usage) would imply that the status is indicated by the asset
 ownership instead (and thus the average consumption consumption doesn't
 need to be counted for the status impact).
 For example, since per-head electricity cost is higher for those with electroni
c equipment - we would conclude that consumer raises her ranking by owning
 electronic equipment and having electricity - rather than by choosing a
 higher price option for electricity.
 We thus ignore the consumption of electricity for testing of signaling
 quantities.
\end_layout

\begin_layout Standard
If clusters of prices are observed after scaling (regression) with the usage
 variable, we use the cluster prices as input to our affordability factor
 calculation.
 As a sanity check, we may also verify the factors that may influence the
 choice of a higher price item - e.g.
 with a probit on the dummy of cluster's average-consumption being above
 or below the cluster price threshold as the dependent variable and the
 total expenditure, housingstatus, education, relevant asset etc.
 as control variables.
 This however, is not the part of the methodology to detect price difference
 through average consumption.
\end_layout

\begin_layout Standard
Our eventual goal is to identify the price differences which the consumer
 observes to build her utility tree.
 These trees are are shown for Tanzania LSMS data in the Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tree1"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:tree2"

\end_inset

.
 The overall status from consumption of an individual consumer is simply
 the aggregation of affordability factor (or a similar metric) at the root
 of the tree.
\end_layout

\begin_layout Standard
Taking an example where this methodology might work, we consider the cost-per-he
ad for kerosene which varies a lot in dar-es-salaam (region 7)
\begin_inset Foot
status open

\begin_layout Plain Layout
We have assumed there are no secondary markets or hoarding for items in
 consideration
\end_layout

\end_inset

.
 We clearly cannot claim that the differences in consumption cost per head
 imply a price differentiation for kerosene - simply because availability
 of electricity in Dar-es-salaam can change the usage of kerosene in the
 household (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:ElectricityvsKeroseneCosts"

\end_inset

).
 What we can do for dar-es-salaam (or any region where electricity is also
 available) is to consider electricity and kerosene as the variants of energy
 level in tree and treat electricity as a higher price variant of the energy-sou
rce.
\end_layout

\begin_layout Standard
Not all problems can be circumvented with such an aggregation either.
 One cannot for example, use per-head consumption costs to detect price
 differentiation for cigarettes - where the most significant factor affecting
 high consumption is simply be the addiction of the consumer - the data
 on which is not available in the survey.
 We are compelled to ignore smoking for our analysis.
 
\end_layout

\begin_layout Standard
It is also possible that the asset itself - related to the consumed good
 whose average consumption we test for price-differentiation - has more
 variants of different prices than those of consumed good.
 For example, detergent that serves clothes may not be varied but the washing
 machine where detergents are used could be more nuanced.
 Unfortunately we do not have even the cost estimate on assets owned by
 the household - so we are left with ignoring this possibility at the moment.
\end_layout

\begin_layout Standard
For most other non-food commodities, either aggregation and/or cluster-detection
 could help identify the price-differentiation.
 If we look at the per-head consumption cost on bar soap, there seem to
 be two cost clusters in region dar-es-salaam - the dummy of per-head-consumptio
n-cost <6000 (i.e.
 the cluster dummy) finds roomsnum, language and occupation all significant
 (total expenditure is not) i.e.
 those with a better-paying occupations and English-speaking abilities tend
 to spend disproportionately on bar-soap - this difference in consumption
 per-head costs could be used as the price-difference in our original sense.
 The similar cluster dummy for detergent is not found significant (except
 for roomsnum in dar-es-salaam ) - hence we ignore detergents for price-differen
tiation.
 It can't be denied that such inferences are ad-hoc and dependent on whether
 there are any assets that may justify higher per-head consumption cost
 or not.
\end_layout

\begin_layout Standard
Our end-goal is to differentiate the status-impact of consumption from the
 status-impact of assets and then consider a combined status impact form
 assets and consumption - so we may fit the function for consumption from
 status goods into the intertemporal substitution problem.
 The relative assets-ownership ranking of consumers is an important part
 of this exercise.
 The LSMS data does not have even the cost information for assets owned,
 so we only consider the number of items owned for asset-ownership ranking
 of consumes i.e.
 if someone has more assets than another person who has less or none of
 the same asset, then all else being equal the former is invariably of higher
 status than the latter.
 Since our goal is to finally combine the asset-ranking and consumption
 ranking, we avoid double-counting the role of assets - since a lot of items
 are not consumed simply because the asset related to it is not owned by
 the consumer.
\end_layout

\begin_layout Section

\size normal
Comparing consumption across commodities
\end_layout

\begin_layout Standard
The prices are recorded for a set of quantities.
 These quantities are nearly the same for (mls, litres, g, kgs, pieces)
 for both recorded prices and consumed quantities.
 However, not all food items are recorded - so we must rely on the inferred
 prices for the most part.
 In fact, if we were to filter out of all the items where price is not recorded
 (NA), we would be only left with about 500 households (for 2010).
 Such a filter is a very restrictive one and we choose to depend on recorded_pri
ce alone for premium - we use it for guided value wherever it is available.
 When multiple prices are recorded for the same quantity (or for a different
 quantity) - we choose the recorded_price that is closest to the inferred
 price.
 The matching is never done on quantities - only on prices.
 Across all regions only the following items have multiple prices recorded
 - Peas/Lentils - 401 , Onions-tomatoes 601, Millet-grain 106, Spinach 602
 , Seafood 808, Bread 109, Local brews 107, Yams 204, Cassava-flour 202
 Fruits 703.
 Staying close to the recorded price ensures that we only have slight measuremen
t errors in our technique and an double-evidence for clustering in prices.
 Unfortunately market prices are not recorded for all region codes in the
 survey.
 Even if prices were recorded on a ward or district level (ignoring the
 ea level) prices recorded are still quite rare.
 Only about 30% of the total purchases can be matched up with recorded -
 prices.
 Of those where prices can be matched, about 15% of the inferred-prices
 deviate more than 50% from the closest recorded price.
 We could think of matching with the price-quantity relatonship but the
 market prices are not rich enough for that.
 Where multiple prices are recorded they indicate the variety of items rather
 than the different quantities.
 Following prices for cassava/dry flour indicate the difference between
 cassava and its dry flour in the market.
 The disparity in prices justifies the price-matching.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="12">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
region
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
district
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ward
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ea
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
item
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lwp_unit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
lwp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
price
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
factor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
recorded_quantity
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
recorded_price
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3545
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
202
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3546
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
202
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
750
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
500
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.001
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.75
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
666.666666666667
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
The use of market-recorded prices are to adjust the effective of region
 on prices.
 We observe that a some prices can be very skewed (local brews 107).
 Some data is clearly bad (e.g.
 for eggs, canned milk).
 Chicken seems highly skewed.
 Taken over all regions, the highest kurtosis (not much difference in prices)
 is observed for charcoal (207), milling-grain fees(208), Maize-flour(105),
 Sugar(301), Salt(1003), Fruits (703) , Beef(802), Eggs(807).
 Less kurtosis (diffusion) is in Millet-grain(106), Bread(109), Irish potatoes(2
05), Coconuts (502), Onions-tomatoes (601) - different items, Spinach(602),
 Dry-tea(1101).
 Next are Kerosene (201), Maize cob (103), Cassava (201), Plantains (206),
 Groundnuts (501), Chicken (804), Local Brews (1107).
 Still lower kurtosis (higher differences) are in Sweet potatoes (203),
 Bananas (701), Citric Fruits (702), Fish-Seafood (808), Milk(901), Cooking
 oil (1001).
 Lowest kurtosis is found husked rice (102), MaizeGrain (104), Millet-Flour(107)
, Cassava-dryflour (202), Yams/cocoyams(204) (two varieties), Peas/lentils(401),
 Goat meat (801).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
onecolumn
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/local_files/research/consumption/tree1.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tree1"

\end_inset

Utility tree for Tanzania LSMS items (1) 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/local_files/research/consumption/tree2.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:tree2"

\end_inset

Utility tree for Tanzania LSMS items (2) 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename kerosene_electricity.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ElectricityvsKeroseneCosts"

\end_inset

Electricity vs Kerosene costs per head in Dar-es-salaam
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
### declarations
\end_layout

\begin_layout Plain Layout
source('translation/frameutils.R') # populates fu
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
source('lsms/lsms_normalizer.r');source('lsms/lsms_loader.r');
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ll=lsms_loader(fu=fu,ln=lsms_normalizer)
\end_layout

\begin_layout Plain Layout
###
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ddply(dsv,.(region),summarise,mean(perheadvis),n=length(hhid))
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dat2010=ll@load_diary_file(dirprefix = '.',year = 2010,fu=fu,ln=ln)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
af_item<-function (currentItem,year,loadFile){
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
fileName<-paste('c:/local_files/research/consumption/lsms/individual_consumption
_files/',year,'/',year,toString(currentItem),'.dta',sep='')
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
if (missing(loadFile)){
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ds<-ll@combined_data_set(year=year,selected_category=currentItem, dirprefix='c:/
local_files/research/consumption/',fu=fu,ln=ln)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
write.dta(ds,fileName)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
} else {
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
print(paste('Reading file:',fileName))
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ds<-read.dta(fileName)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
}
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dsv<-ds[ds$visible_consumption>0,]
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ds<-NULL
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dsv$perheadvis<-dsv$visible_consumption/dsv$consu
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dsv$af<-dsv$perheadvis-quantile(dsv$perheadvis,.9)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
return(dsv)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
}
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
summary(lm(data=dsv,visible_consumption~consu))
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
plot(dsvkerosene7[is.element(dsvkerosene7$hhid,hhids),]$perheadvis,dsvelec7[is.ele
ment(dsvelec7$hhid,hhids),]$perheadvis,xlab = "Kerosene per head cost",
 ylab= "Electricity per head cost",type='p')
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
kmeans(dsvbarsoap7$perheadvis,centers=2)[["centers"]]
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
###
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dsv<-af_item(currentItem = "210",year = 2010)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
dsvdetergent7<-dsv[dsv$region==7,]
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
hist(dsvdetergent7$perheadvis,breaks=1000)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
#merging asset ownership data
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
ndat<-read.dta('../lsms/TZNPS2HH2DTA/HH_SEC_N.dta',convert.factors = FALSE)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
c <- fu()@get_translated_frame(dat=ndat, names=lsms_normalizer()@get_diary_secn_
columns_lsms_2010(), m=lsms_normalizer()@get_diary_secn_fields_mapping_lsms_2010
())
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
k<-subset(c,is.element(itemcode,c("407")))
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
k<-data.frame(hhid=k$hhid,num_items=k$number)
\end_layout

\begin_layout Plain Layout

\family typewriter
\size small
x<-merge(x=k,y=dsv,by="hhid",all.y=TRUE)
\end_layout

\begin_layout Plain Layout
####
\end_layout

\begin_layout Plain Layout
#Food data can be handled as follows
\end_layout

\begin_layout Plain Layout
dat2010<-lsms_loader()@load_diary_file(dirprefix = ".",year = 2010,fu=fu,ln=lsms_
normalizer)
\end_layout

\begin_layout Plain Layout
#toString(unique(dat2010[dat2010$lwp>0,]$item)) - returns - "NA, 10110,
 10301, 10401, 10601, 10602, 10801, 10809, 11001, 11003, 11101, 10102, 10203,
 10205, 10501, 10701, 10703, 10807, 10901, 10902, 11004, 11104, 10108, 10802,
 10804, 10105, 10109, 10502, 10104, 10808, 10201, 10704, 11106, 11107, 10303,
 10702, 10803, 10107, 10603, 10112, 10302, 10806, 10206, 10903, 10106, 10103,
 11002, 10101, 11105, 10202, 10204, 10111, 10207, 11102, 11103, 11108, 10503,
 10810, 10504, 10805"
\end_layout

\begin_layout Plain Layout
dat2010$factor<-as.integer(dat2010$lwp_unit==1)+as.integer(dat2010$lwp_unit==2)/10
00.0+as.integer(dat2010$lwp_unit==3)+as.integer(dat2010$lwp_unit==4)/1000.0+as.intege
r(dat2010$lwp_unit==5) 
\end_layout

\begin_layout Plain Layout
dat2010$quantity<-dat2010$factor*dat2010$lwp
\end_layout

\begin_layout Plain Layout
dat2010$price<-dat2010$cost/dat2010$quantity
\end_layout

\begin_layout Plain Layout
di<-subset(dat2010,item == 10110)
\end_layout

\begin_layout Plain Layout
res=kmeans(x = di$price,centers = 3) ; res[[c("betweenss")]]/res[[("tot.withinss"
)]]
\end_layout

\begin_layout Plain Layout
#prices from market
\end_layout

\begin_layout Plain Layout
cjdat<-read.dta('../lsms/TZNPS2COMDTA/COMSEC_CJ.dta',convert.factors = FALSE)
\end_layout

\begin_layout Plain Layout
cj <- fu()@get_translated_frame(dat=cjdat, names=lsms_normalizer()@ohs_seccj_col
umns_lsms_2010(), m=lsms_normalizer()@ohs_seccj_mapping_lsms_2010()) # recorded
 market prices
\end_layout

\begin_layout Plain Layout
cj$factor<-as.integer(cj$lwp_unit==1)+as.integer(cj$lwp_unit==2)/1000.0+as.integer(c
j$lwp_unit==3)+as.integer(cj$lwp_unit==4)/1000.0+as.integer(cj$lwp_unit==5)
 # command label list (from labutil package) tells us the numeric values
 of factors
\end_layout

\begin_layout Plain Layout
cj<-subset(cj,!is.na(price) & !is.na(lwp) & lwp!=0 &price!=0)
\end_layout

\begin_layout Plain Layout
cj$recorded_quantity<-cj$lwp*cj$factor
\end_layout

\begin_layout Plain Layout
cj$recorded_price <-cj$price/cj$recorded_quantity
\end_layout

\begin_layout Plain Layout
k<-cj[,c("region","district","ward","ea","item","recorded_quantity","recorded_pr
ice")]
\end_layout

\begin_layout Plain Layout
convert_cj_item <- function(x){ 
\end_layout

\begin_layout Plain Layout
if (regexpr('^L',x)[[1]]==1)
\end_layout

\begin_layout Plain Layout
{ return(as.integer(substring(x,2))) } 
\end_layout

\begin_layout Plain Layout
else { return (10000+as.integer(x)) }
\end_layout

\begin_layout Plain Layout
}
\end_layout

\begin_layout Plain Layout
# test - as.numeric(lapply(X = c("1","L203"),FUN = convert_cj_item))
\end_layout

\begin_layout Plain Layout
k$item<-as.numeric(lapply(X = k$item,FUN = convert_cj_item))
\end_layout

\begin_layout Plain Layout
k<-k[!is.na(k$recorded_price),]
\end_layout

\begin_layout Plain Layout
## item plot <start>
\end_layout

\begin_layout Plain Layout
q<-1001
\end_layout

\begin_layout Plain Layout
b<-subset(cj,item==q& !is.na(price) & !is.na(lwp) & lwp!=0 &price!=0)
\end_layout

\begin_layout Plain Layout
library(rgl)
\end_layout

\begin_layout Plain Layout
plot3d(b$region,b$lwp*b$factor, b$recorded_price)
\end_layout

\begin_layout Plain Layout
###<end>
\end_layout

\begin_layout Plain Layout
#see item prices
\end_layout

\begin_layout Plain Layout
ohs<-ll@load_ohs_file(year = 2010, dirprefix = '.',fu = fu,ln = lsms_normalizer)
\end_layout

\begin_layout Plain Layout
hhidsRegion<-unique(ohs[,c("hhid","region","district","ward","ea")]) # unique
 ignores person id
\end_layout

\begin_layout Plain Layout
hhidsRegion<-subset(hhidsRegion,!is.na(hhid) & !is.na(region))# too many NAs
 in hhidsRegion
\end_layout

\begin_layout Plain Layout
#cjCodes=['101', '102', '103', '104', '105', '106', '106', '107', '107',
 '109', '109', '201', '202', '202', '203', '204', '204', '205', '206', '301',
 '401', '401', '501', '502', '601', '602', '602', '701', '702', '703', '703',
 '801', '802', '804', '807', '808', '808', '901', '903', '1001', '1003',
 '1101', '1107', 'L201', 'L207', 'L208', '999']
\end_layout

\begin_layout Plain Layout
#f= lambda x : int(x) + 10000 if x[0]!='L' else x[1:]
\end_layout

\begin_layout Plain Layout
#ddply(k,.(item),summarise,s=skewness(recorded_price),k=kurtosis(recorded_price),
n=length(recorded_price)) #gives how prices vary
\end_layout

\begin_layout Plain Layout
#ddply(k,.(region,district,ward,ea,item,quantity),summarise,n=length(quantity),sd
=sd(recorded_price)) # gives us how multiple recorded prices for same quantity
 exist for many items
\end_layout

\begin_layout Plain Layout
householdLocation<-merge(hhidsRegion[c("hhid","region","district","ward","ea")],
 dat2010[,c("hhid","item","quantity","price")],by=c("hhid"),all=TRUE)
\end_layout

\begin_layout Plain Layout
hhidsRegionRecPrices<-merge(k[,c("item","region","district","ward","ea","recorde
d_price","recorded_quantity")],householdLocation,by = c("item","region","distric
t","ward","ea"),all.y = TRUE)
\end_layout

\begin_layout Plain Layout
hhidsRegionRecPrices$pricediff<-abs(1-hhidsRegionRecPrices$price/hhidsRegionRecP
rices$recorded_price)
\end_layout

\begin_layout Plain Layout
minPriceDiffs<-ddply(hhidsRegionRecPrices,.(item,region,district,ward,ea,hhid),su
mmarise,pricediff=min(pricediff))
\end_layout

\begin_layout Plain Layout
hhidsRegionRecClosestPrices<-merge(minPriceDiffs,hhidsRegionRecPrices,by=c("hhid
","item","region","district","ward","ea","pricediff"))
\end_layout

\begin_layout Plain Layout
pricesTooFar<-hhidsRegionRecClosestPrices[hhidsRegionRecClosestPrices$pricediff>
2.
 & !is.na(hhidsRegionRecClosestPrices$pricediff),]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
twocolumn
\end_layout

\end_inset


\end_layout

\end_body
\end_document
